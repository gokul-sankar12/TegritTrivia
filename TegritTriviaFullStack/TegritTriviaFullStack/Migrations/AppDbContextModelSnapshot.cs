// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TegritTriviaFullStack.Data;

#nullable disable

namespace TegritTriviaFullStack.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TegritTrivia.Models.TriviaResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("QuizDate")
                        .HasColumnType("date");

                    b.Property<int>("ResponseCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TriviaResponse");
                });

            modelBuilder.Entity("TegritTrivia.Models.TriviaResults", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correct_Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Difficulty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncorrectAnswersJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Incorrect_Answers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Options")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelectedOption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TriviaResponseId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TriviaResponseId");

                    b.ToTable("TriviaResults");
                });

            modelBuilder.Entity("TegritTriviaFullStack.Data.QuizForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("FormDate")
                        .HasColumnType("date");

                    b.Property<int>("TriviaResponseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("QuizForm");
                });

            modelBuilder.Entity("TegritTrivia.Models.TriviaResults", b =>
                {
                    b.HasOne("TegritTrivia.Models.TriviaResponse", "TriviaResponse")
                        .WithMany("Results")
                        .HasForeignKey("TriviaResponseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TriviaResponse");
                });

            modelBuilder.Entity("TegritTrivia.Models.TriviaResponse", b =>
                {
                    b.Navigation("Results");
                });
#pragma warning restore 612, 618
        }
    }
}
